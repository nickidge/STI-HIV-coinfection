optim_result
SID_mat
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
modelpars
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
max_df
max_df_base = data.frame()
source('~/GitHub/STI-HIV-coinfection/f_scenarios.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
max_df_base
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
max_df
str(max_d)
str(max_df)
Q
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
str(max_df)
str(max_df_base[max_df_base$plot %in% df$plot,])
max_df_base$plot %in% df$plot
max_df$plot = factor(max_df$plot)
Q
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
?unit
source('~/GitHub/STI-HIV-coinfection/themes.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
Q
?theme
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
sHIV$I
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
?geom_area
scen_df$plot
?data.frame
plot_index = rbind(
c('PLHIV', 'prop', 'PLHIV'),
c('HIV_diag', 'tot', 'HIV_diag'),
c('HIV_inf', 'tot', 'HIV_inf'),
c('num_diag', 'prop', 'care_cascade'),
c('num_treat', 'prop', 'care_cascade'),
c('num_suppr', 'prop', 'care_cascade'),
c('num_und', 'tot', 'num_cascade'),
c('num_diag', 'tot', 'num_cascade'),
c('num_treat', 'tot', 'num_cascade'),
c('num_suppr', 'tot', 'num_cascade')
)
plot_index
data.frame(plot_index)
?rbind
colnames(plot_index) = c('key', 'count', 'plot')
plot_index = data.frame(plot_index)
plot_index
tvec_base = seq(2007, 2030, by=1/12)
plot_years = c(2007, 2030)
label_years = unique(c(plot_years, seq(2000, 2050, by=5)))
split_year = 2014
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'more_test',
long = 'Testing more often'))
# bulk of code
source("init.R", echo = F)
source("info.R", echo = F)
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'))
}
# run base scenario (with uncertainty)
base_df = gen_uncertainty(30)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
# run all scenarios (with uncertainty)
scen_df = gen_scenarios(scen_df=base_df, scenarios=scenarios, ntrials=30)
saveopen(plot_scens(scen_df), 'scenarios', 'plots')
Q
Q
Q
Q
c
c
tvec_base = seq(2007, 2030, by=1/12)
plot_years = c(2007, 2030)
label_years = unique(c(plot_years, seq(2000, 2050, by=5)))
split_year = 2014
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'more_test',
long = 'Testing more often'))
# bulk of code
source("init.R", echo = F)
source("info.R", echo = F)
source("processing.R", echo=F)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'))
}
pars_raw
source("loadpars.R", echo = F)
plot_index
plot_keys
df_wide$plot
df_wide$HIV_pop
df_wide[,c("HIV_pop", "count")]
colnames(plot_index) = c('HIV_pop', 'count', 'plot')
plot_index = data.frame(plot_index)
plot_inde
plot_index
merge(df_wide, plot_index)
df_wide
merge(df_wide, plot_index, all.x=F, all.y=T)
inner_join(df_wide, plot_index)
?merge
merge(df_wide, plot_index, all.x=T, all.y=T)
merge(df_wide, plot_index, all.x=T, all.y=F)
df_wide
merge(plot_index, df_wide, all.x=F, all.y=T)
inner_join(plot_index, df_wide)
merge(df_wide, plot_index, all.x=T, all.y=F)
merge(df_wide, plot_index, all.x=T, all.y=F, sort=F)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
base_df
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'))
}
# run base scenario (with uncertainty)
base_df = gen_uncertainty(3)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
# run all scenarios (with uncertainty)
scen_df = gen_scenarios(scen_df=base_df, scenarios=scenarios, ntrials=3)
saveopen(plot_scens(scen_df), 'scenarios', 'plots')
df_wide
df_wide$plot
plot_index
df_wide$HIV_pop
str(plot_index)
merge(df_wide, plot_index, all.x=T, all.y=F, sort=F)
Q
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
merge(df_wide, plot_index, all.x=T, all.y=F, sort=F)
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'), control=list(tol = 1e-2))
df_wide
merge(df_wide, plot_index, all.x=T, all.y=F, sort=F)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
p
?unit
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
df
df$plot
merge(df, plot_index)
tvec_base = seq(2007, 2030, by=1/12)
plot_years = c(2007, 2030)
label_years = unique(c(plot_years, seq(2000, 2050, by=5)))
split_year = 2014
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'more_test',
long = 'Testing more often'))
# bulk of code
source("init.R", echo = F)
source("info.R", echo = F)
source("processing.R", echo=F)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'), control=list(tol = 1e-2))
}
# run base scenario (with uncertainty)
base_df = gen_uncertainty(3)
base_df
base_df$plot
merge(base_df, plot_index, all.x=T)
ttt = head(base_df)
ttt
merge(ttt, plot_index, all.x=T)
ttt
ttt$plot = NULL
ttt
merge(ttt, plot_index, all.x=T)
plot_index
tvec_base = seq(2007, 2030, by=1/12)
plot_years = c(2007, 2030)
label_years = unique(c(plot_years, seq(2000, 2050, by=5)))
split_year = 2014
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'more_test',
long = 'Testing more often'))
# bulk of code
source("init.R", echo = F)
source("info.R", echo = F)
source("processing.R", echo=F)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'), control=list(tol = 1e-2))
}
# run base scenario (with uncertainty)
base_df = gen_uncertainty(3)
base_df$plot
ttt = head(base_df)
ttt
ttt = distinct(base_df[,c("HIV_pop", "counttype")])
ttt
plot_index
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
base_df
base_df$plot
ttt = distinct(base_df[,c("HIV_pop", "counttype")])
ttt
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
base_df
ttt = distinct(base_df[,c("HIV_pop", "counttype")])
ttt
diagnoses0
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
### Loading Parameters and Data ###
# import data
data_raw = read_excel("data_sti.xlsx", sheet="data")
# create matrices from data and omit absent values,
# but create an index for which values thes are.
# this is only necessary for PLHIV0 and prop_diag0 for now
data_years = data_raw[,1]
cascade0 = data_raw[,c(1,4,5,6)]
cascade0 = cascade0[!is.na(cascade0[,2]),]
diagnoses0 = data_raw[,c(1,2)]
diagnoses0 = diagnoses0[!is.na(diagnoses0[,2]),];
PLHIV0 =  data_raw[,c(1,3)]
PLHIV0_index = !is.na(PLHIV0[,2]) # [1:max(which(!is.na(PLHIV0[,2])==TRUE))]
PLHIV0 = PLHIV0[!is.na(PLHIV0[,2]),]
prop_diag0 =  data_raw[,c(1,4)]
prop_diag0_index = !is.na(prop_diag0[,2]) # [1:max(which(!is.na(prop_diag0[,2])==TRUE))]
prop_diag0 = prop_diag0[!is.na(prop_diag0[,2]),]
prop_treat0 =  data_raw[,c(1,5)]
prop_treat0 = prop_treat0[!is.na(prop_treat0[,2]),]
prop_suppressed0 =  data_raw[,c(1,6)]
prop_suppressed0 = prop_suppressed0[!is.na(prop_suppressed0[,2]),]
totalpop0 =  data_raw[,c(1,7)]
totalpop0 = totalpop0[!is.na(totalpop0[,2]),]
# prev_sti0 = data_raw[,c(1,8,9)]
prev_sti0 = data_raw[,grepl("Year", colnames(data_raw)) | grepl("Gon prev", colnames(data_raw))]
prev_sti0_index = !is.na(prev_sti0[,2])
prev_sti0 = prev_sti0[prev_sti0_index[,1],]
# PLsti0 = data_raw[,c(1,12,13)]
PLsti0 = data_raw[,grepl("Year", colnames(data_raw)) | grepl("Total Gon+ HIV", colnames(data_raw), fixed=T)]
PLsti0_index = !is.na(PLsti0[,2])
PLsti0 = PLsti0[PLsti0_index[,1],]
# diagnoses_sti0 = data_raw[,c(1,15,16)]
diagnoses_sti0 = data_raw[,grepl("Year", colnames(data_raw)) | grepl("Total Gon cases HIV", colnames(data_raw), fixed=T)]
diagnoses_sti0_index = !is.na(diagnoses_sti0[,2])
diagnoses_sti0 = diagnoses_sti0[diagnoses_sti0_index[,1],]
# HIV_main_data = as.data.frame(data_raw[,1:3])
HIV_main_data = as.data.frame(data_raw[,grepl("Year", colnames(data_raw)) | grepl("New diagnoses", colnames(data_raw), fixed=T) | grepl("Total PLHIV", colnames(data_raw), fixed=T)])
colnames(HIV_main_data) = c("year", "diagnoses_HIV", "value")
HIV_main_data$N = factor("data")
HIV_main_data$HIV_group = "HIV_plus"
# # sti_main_data_1 = as.data.frame(data_raw[,c(1,7)])
# sti_main_data_1 = as.data.frame(data_raw[,grepl("Year", colnames(data_raw)) | grepl("Total MSM", colnames(data_raw), fixed=T)])
# sti_main_data_1[,2] = (sti_main_data_1[,2] - HIV_main_data[,3]) *  data_raw[,grepl("Gon prev: HIV-", colnames(data_raw), fixed=T)]
# colnames(sti_main_data_1) = c("year", "value")
# sti_main_data_1$sti_group = "sti_plus"
# sti_main_data_1$HIV_group = "HIV_minus"
#
# # sti_main_data_2 = as.data.frame(data_raw[,c(1,3)])
# sti_main_data_2 = HIV_main_data[,c(1,3)]
# sti_main_data_2[,2] = sti_main_data_2[,2] * data_raw[,grepl("Gon prev: HIV+", colnames(data_raw), fixed=T)]
# colnames(sti_main_data_2) = c("year", "value")
# sti_main_data_2$sti_group = "sti_plus"
# sti_main_data_2$HIV_group = "HIV_plus"
#
#
# # sti_main_data_3 = as.data.frame(data_raw[,c(1,19)])
# sti_main_data_3 = diagnoses_sti0[,c(1,2)]
# colnames(sti_main_data_3) = c("year", "value")
# sti_main_data_3$sti_group = "diagnoses_sti"
# sti_main_data_3$HIV_group = "HIV_minus"
#
# # sti_main_data_4 = as.data.frame(data_raw[,c(1,20)])
# sti_main_data_4 = diagnoses_sti0[,c(1,3)]
# colnames(sti_main_data_4) = c("year", "value")
# sti_main_data_4$sti_group = "diagnoses_sti"
# sti_main_data_4$HIV_group = "HIV_plus"
#
# # sti_main_data_5 = as.data.frame(data_raw[,c(1,8)])
# sti_main_data_5 = prev_sti0[,c(1,2)]
# colnames(sti_main_data_5) = c("year", "value")
# sti_main_data_5$sti_group = "prev_sti"
# sti_main_data_5$HIV_group = "HIV_minus"
#
# # sti_main_data_6 = as.data.frame(data_raw[,c(1,9)])
# sti_main_data_6 = prev_sti0[,c(1,3)]
# colnames(sti_main_data_6) = c("year", "value")
# sti_main_data_6$sti_group = "prev_sti"
# sti_main_data_6$HIV_group = "HIV_plus"
#
# sti_main_data = rbind(sti_main_data_1, sti_main_data_2, sti_main_data_3, sti_main_data_4, sti_main_data_5, sti_main_data_6)
# sti_main_data$N = factor("data")
PLHIV_dat = data.frame(t = PLHIV0$Year, value = PLHIV0$`Total PLHIV`, type='pop', dt=1, pid = 'PLHIV_tot',
sti_pop='all', risk_pop='all', HIV_pop='PLHIV', source='data', scen='')
HIV_diag_dat = data.frame(t = diagnoses0$Year, value = diagnoses0$`New diagnoses`, type='trans', dt=1, pid='HIV_diag_tot',
sti_pop='all', risk_pop='all', HIV_pop='HIV_diag', source='data', scen='')
prop_diag_dat = data.frame(t = cascade0$Year, value = cascade0$`Prop HIV diagnosed`, type='pop', dt=1, pid='prop_diag_prop',
sti_pop='all', risk_pop='all', HIV_pop='prop_diag', source='data', scen='', plot='care_cascade')
all_dat = rbind.fill(PLHIV_dat, HIV_diag_dat, prop_diag_dat)
all_dat$plot[is.na(all_dat$plot)] = all_dat$HIV_pop[is.na(all_dat$plot)]
all_dat$scen = 'data'
all_dat$scen_long = 'Data'
data_wide = widen_sources(all_dat)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
p
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
p
p
p
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
df$t
df$lower_ci
df$upper_ci
p
df$t
p + geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, x=t), alpha=0.2, colour=NA, na.rm=T)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
df$plot
unique(df$plot)
df[is.na(df$plot),]
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
# run base scenario (with uncertainty)
base_df = gen_uncertainty(3)
colnames(df)
colnames(df_wide)
df_wide$pid
df$pid
df
ttt = head(df, 20)
ttt
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
p
p
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
df
unique(df$plot)
df[is.na(df$plot),]
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
tvec_base = seq(2007, 2030, by=1/12)
plot_years = c(2007, 2030)
label_years = unique(c(plot_years, seq(2000, 2050, by=5)))
split_year = 2014
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'more_test',
long = 'Testing more often'))
# bulk of code
source("init.R", echo = F)
source("info.R", echo = F)
source("processing.R", echo=F)
source("plotting.R", echo = F)
source("themes.R", echo = F)
source("pars.R", echo = F)
source("loadpars.R", echo = F)
source("default_values.R", echo = F)
source("model.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
# calibrate model
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
cal_keys = c('PLHIV', 'HIV_diag', 'care_cascade')
gen_calibration(c('f_infect_HIV', 'init_diag_prop', 'init_prev_HIV'), control=list(tol = 1e-2))
}
# run base scenario (with uncertainty)
base_df = gen_uncertainty(3)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
base_df$plot
unique(base_df$plot)
base_df$t
df = base_df
colour_scale = data.frame(HIV_pop = c('prop_und', 'prop_diag', 'prop_treat', 'prop_suppr'),
long = c('Proportion undiagnosed', 'Proportion diagnosed', 'Proportion diagnosed on treatment', 'Proportion on treatment virally suppressed'),
col = c('red', 'orange', 'yellow', 'green'))
# max_df = df %>%
#   group_by(plot) %>%
#   filter(min(plot_years) <= t & t <= max(plot_years)) %>%
#   summarise(max = max(model, data, upper_ci, na.rm=T)) %>%
#   # mutate(upperlim = ifelse(plot %in% c('HIV_prev', 'care_cascade'), 1, 1.1 * max)) %>%
#   mutate(upperlim = ifelse(plot %in% c('care_cascade'), 1, 1.1 * max)) %>%
#   as.data.frame()
max_df = max_df_base[max_df_base$plot %in% df$plot,]
max_df$plot = factor(max_df$plot)
df$HIV_pop = factor(df$HIV_pop, levels = unique(df$HIV_pop)[order(sapply(unique(df$HIV_pop), function(x) max(c(0, match(x, colour_scale$HIV_pop)), na.rm=TRUE)), decreasing=TRUE)])
p = ggplot(df, aes(x=t, group=HIV_pop, colour=HIV_pop, fill=HIV_pop))
p = p + geom_point(aes(y = data), na.rm=T, size=1.3)
p
df$HIV_pop
p
grid.draw(p)
df
p = ggplot(df, aes(x=t, group=HIV_pop, colour=HIV_pop, fill=HIV_pop))
p = p + geom_path(aes(y = model), na.rm=T, lwd=1.3)
[]
p
