if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(3), 'uncertainty', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(3), 'calibration', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(3), 'calibration', 'plots')
saveopen(plot_uncertainty(3), 'calibration', 'plots')
cal_wide
?runif
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(3), 'calibration', 'plots')
randomise_within_bounds(statkeys[[key]]$v, statkeys[[key]]$lb, statkeys[[key]]$ub)
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(3), 'calibration', 'plots')
saveopen(plot_uncertainty(10), 'calibration', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
dat = all_dat
dat$scen = 'data'
dat = widen_sources(dat)
ntrials_scen = 5
basevar = 0.2
scen_df = ci_df(ntrials_scen, basevar=basevar, options=list('keep_static'=TRUE))
# scen_df = extr(cal, scen_keys)
scen_df = widen_sources(scen_df)
scen_df$scen = 'base'
scen_df = rbind.fill(scen_df, dat)
scen_sheet_names = c('timepars', 'scen_1', 'scen_2')
scen_short_names = c('base', 'no_prep', 'less_test')
scen_long_names = c('Base', 'Everyone stops using PrEP', 'Testing less often')
for(s in 2:3){
thisscen = load_time_par_sheet(scen_sheet_names[s], deflist = baselist, syear=split_year+1)
this_scen_trials = ci_df(ntrials=ntrials_scen, timepars=thisscen, basevar=basevar, options=list('keep_static'=TRUE), syear=split_year+1)
# this_scen_trials = ci_df(ntrials=5, timepars=thisscen, basevar=0.1, tvec=tvec_split, y0=y0_split, options=list('split'=TRUE, 'keep_static'=TRUE), syear=split_year+1)
# thismodel = run_model(y0_base, modelpars=thisscen)
# thismodel = run_model(y0_split, tvec = tvec_split, options=list('split'=TRUE), modelpars=thisscen)
thisdf = this_scen_trials
thisdf = widen_sources(thisdf)
thisdf$scen = scen_short_names[s]
scen_df = rbind.fill(scen_df, thisdf)
}
diffscens = thisscen[laply(names(thisscen), function(x) !identical(thisscen[[x]], baselist[[x]]))]
scen_df$t = as.numeric(as.character(scen_df$t))
scen_df$scen = factor(scen_df$scen, levels = c('data', rev(scen_short_names)), labels = c('Data', rev(scen_long_names)))
p = plot_df(scen_df)
p = p + scale_colour_manual(limits = c('Data', scen_long_names),
values=c('black', 'black', 'red', 'green'),
aesthetics = c("colour", "fill"))
p = p + geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, x=t), alpha=0.2, colour=NA)
p
scen_df
p = plot_df(scen_df)
p
p = p + geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, x=t), alpha=0.2, colour=NA)
saveopen(p, 'scenarios', 'plots')
?expand_limits
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(3), 'calibration', 'plots')
source("scenarios.R", echo = T)
str(scen_df)
source("plot_scenarios.R", echo = F)
source("scenarios.R", echo = T)
saveopen(p, 'scenarios', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
?lapply
?math
?match
?scale_colour_manual
source("plot_scenarios.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
?theme
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/plot_scenarios.R', echo=TRUE)
source("scenarios.R", echo = T)
?facet_wrap
plot_long
source('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(20)), 'calibration', 'plots')
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(20)), 'calibration', 'plots')
df$plot
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
trials_df$plot
cal_wide$plot
cal_wide$plot
source('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
View(gen_uncertainty)
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
df$plot
Q
source('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
df$plot
debugSource('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
trials_df$plot
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
trials_df$plot
source('~/GitHub/STI-HIV-coinfection/f_uncertainty.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
plot_keys[match(df_wide$HIV_pop, plot_keys)]
plot_index = c(PLHIV = 'Total PLHIV',
HIV_diag = 'Annual HIV diagnoses',
HIV_inf = 'Annual HIV incidence',
prop_diag = 'Care cascade',
prop_treat = 'Care cascade',
prop_suppr = 'Care cascade')
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
plot_index = c(PLHIV = 'PLHIV',
HIV_diag = 'HIV_diag',
HIV_inf = 'HIV_inf',
prop_diag = 'care_cascade',
prop_treat = 'care_cascade',
prop_suppr = 'care_cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
saveopen(plot_uncertainty(gen_uncertainty(3)), 'calibration', 'plots')
source("scenarios.R", echo = T)
?scale_x_continuous
all_dat
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
plot_index = c(PLHIV = 'PLHIV',
HIV_diag = 'HIV_diag',
HIV_inf = 'HIV_inf',
prop_diag = 'care_cascade',
prop_treat = 'care_cascade',
prop_suppr = 'care_cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
ntrials = 3
base_df = gen_uncertainty(ntrials)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
source("scenarios.R", echo = T)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
scen_long_names
scen_df
scen_df$scen_long
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
plot_index = c(PLHIV = 'PLHIV',
HIV_diag = 'HIV_diag',
HIV_inf = 'HIV_inf',
prop_diag = 'care_cascade',
prop_treat = 'care_cascade',
prop_suppr = 'care_cascade')
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_uncertainty.R", echo = F)
source("f_calibrate.R", echo = F)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
ntrials = 3
base_df = gen_uncertainty(ntrials)
saveopen(plot_uncertainty(base_df), 'calibration', 'plots')
source("scenarios.R", echo = T)
basevar
tvec_base = seq(2007, 2025, by=1/12)
plot_years = c(2007, 2022)
label_years = c(2007, seq(2000, 2050, by=5))
split_year = 2014
plot_keys = c('PLHIV', 'HIV_diag', 'HIV_inf', 'care_cascade')
plot_long = c('Total PLHIV', 'Annual HIV diagnoses', 'Annual HIV incidence', 'Care cascade')
plot_index = c(PLHIV = 'PLHIV',
HIV_diag = 'HIV_diag',
HIV_inf = 'HIV_inf',
prop_diag = 'care_cascade',
prop_treat = 'care_cascade',
prop_suppr = 'care_cascade')
scenarios = list(list(sheet = 'scen_1',
short = 'no_prep',
long = 'Everyone stops using PrEP'),
list(sheet = 'scen_2',
short = 'less_test',
long = 'Testing less often'))
source("init.R", echo = F)
source("processing.R", echo=F)
source("loadpars.R", echo = F)
source("info.R", echo = F)
source("default_values.R", echo = F)
source("y0.R", echo = F)
source("themes.R", echo = F)
source("plotting.R", echo = F)
source("pars.R", echo = F)
# function scripts
source("f_calibrate.R", echo = F)
source("f_uncertainty.R", echo = F)
source("f_scenarios.R", echo = T)
source("plot_scenarios.R", echo = F)
# run model and calibrate
source("model.R", echo = F)
if(!exists('cal')){
baselist = load_time_par_sheet('timepars', deflist = defaultlist)
source("calibrate.R", echo = T)
source("pars.R", echo = F)
}
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
source('~/GitHub/STI-HIV-coinfection/main.R', echo=TRUE)
debugSource('~/GitHub/STI-HIV-coinfection/f_scenarios.R', echo=TRUE)
# run all scenarios (with uncertainty)
scen_df = gen_scenarios(scen_df=base_df, scenarios=scenarios, ntrials=5)
saveopen(plot_scens(scen_df), 'scenarios', 'plots')
scen_longs
df$scen_long
df$scen_long[is.na(df$scen_long)]
df[is.na(df$scen_long),]
df[is.na(df$scen_long),]
debugSource('~/GitHub/STI-HIV-coinfection/processing.R', echo=TRUE)
