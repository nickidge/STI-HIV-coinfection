PLHIV_dat = data.frame(t = PLHIV0$Year, value = PLHIV0$`Total PLHIV`, type='pop', dt=1,
                       sti_pop='all', risk_pop='all', HIV_pop='PLHIV', source='data')
HIV_diag_dat = data.frame(t = diagnoses0$Year, value = diagnoses0$`New diagnoses`, type='trans', dt=1,
                          sti_pop='all', risk_pop='all', HIV_pop='HIV_diag', source='data')

all_dat = rbind.fill(PLHIV_dat, HIV_diag_dat)

output_keys = c('PLHIV', 'HIV_diag')

widen_sources = function(dat, res){
  df = rbind.fill(res, dat)
  df_wide = spread(df, source, value)
  return(df_wide)
}

distance_given_f_infect_HIV_optim = function(x, norm=l2){
  f_infect_HIV_cal = x[1]
  init_PLHIV_cal = x[2]
  init_diag_prop_cal = x[3]
  
  callist = baselist
  callist[['f_infect_HIV']] = f_infect_HIV_cal
  callist[['init_diag_prop']] = init_diag_prop_cal
  callist[['init_PLHIV']] = init_PLHIV_cal
  
  output = run_model(y0_base, tvec=seq(min(tvec_base), 2018, by=dt),
                     modelpars=callist,
                     options=list('only_cal_outs' = TRUE))
  
  dat = all_dat
  res = extr(output, output_keys)
  
  df_wide = widen_sources(dat, res)
  df_wide = df_wide[!is.na(df_wide$data) & !is.na(df_wide$model),]
  
  distance = norm(df_wide$data, df_wide$model)
  
  if(runif(1) > 0.7){
    p = plot_calibration(output, all_dat)
    ggsave(paste0('calplots/', round(distance * 1e7), '.png'), p)
  }
  
  return(distance)
}

plot_calibration = function(result, dat){
  res = extr(result, output_keys)
  
  df = widen_sources(dat, res)
  df$HIV_group = paste(df$sti_pop, df$risk_pop, sep='_')
  df$t = as.numeric(as.character(df$t))
  
  p = ggplot(df, aes(x=t, group=HIV_group))
  p = p + facet_wrap(.~HIV_pop+type, scales="free_y")
  p = p + geom_point(aes(y = data), na.rm=T)
  p = p + geom_path(aes(y = model))
  
  p = p + expand_limits(y = 0)
  p = p + scale_x_continuous(breaks = floor(min(df$t)):ceiling(max(df$t)),
                             limits = c(min(df$t), max(df$t)),
                             expand = c(0, 0))
  p = p + scale_y_continuous(expand = expand_scale(mult = c(0, .1)))
  p = p + theme_all
  
  return(p)
}

# optim_result = optimise(distance_given_f_infect_HIV_optim, c(0, 10))
# f_infect_HIV_optim = optim_result$minimum

# optim_result = nmkb(c(f_infect_HIV_base, init_PLHIV_base), distance_given_f_infect_HIV_optim, lower=c(0, 0), upper=c(1e-2, 8000))
optim_result = nmkb(c(defaultlist$f_infect_HIV, defaultlist$init_PLHIV, defaultlist$init_diag_prop), distance_given_f_infect_HIV_optim, lower=c(0, 0, 0), upper=c(1e-2, 8000, 1))
optim_pars = optim_result$par

f_infect_HIV_optim = optim_pars[1]
init_PLHIV_optim = optim_pars[2]
init_diag_prop_optim = optim_pars[3]

baselist[['f_infect_HIV']] = f_infect_HIV_optim
baselist[['init_diag_prop']] = init_diag_prop_optim
baselist[['init_PLHIV']] = init_PLHIV_optim

cal = run_model(y0_base, modelpars=baselist)

res = extr(cal, output_keys)

p = plot_calibration(cal, all_dat)
p
